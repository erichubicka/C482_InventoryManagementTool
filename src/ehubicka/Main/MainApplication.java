package ehubicka.Main;

/**
 *
 * @author Eric Hubicka
 */

import Model.InHouse;
import Model.Inventory;
import Model.Outsourced;
import Model.Product;
import javafx.application.Application;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.stage.Stage;

import java.io.IOException;

// javadoc's are located in the javadoc folder in the top level of the Inventory project directory

/**
 * MainApplication class inherits the Application class which sets the stage for the application.
 * It will launch the application lifecycle from init to start to stop.
 * Several initial part and product records will be populated in each of the MainScreen tableviews.
 * FUTURE ENHANCEMENT: Remove the initial sample data generated by the application on launch.
 * In order to retain persistent data records, implement a SQL database into the application to reference from.
 * A SQL database would retain the snapshot of data upon application close.
 * This snapshot of data would be retained upon application close and would display next time the application was launched.
 */
public class MainApplication extends Application {
    /**
     * Start method used to construct and set the stage for the entire application
     * @param stage will start the program
     * @throws IOException throws an exception when an IO error occurs
     */
    @Override
    public void start(Stage stage) throws IOException {
        FXMLLoader fxmlLoader = new FXMLLoader(MainApplication.class.getResource("/View/MainScreen.fxml")); //first screen displayed on app launch, use full path
        Scene scene = new Scene(fxmlLoader.load(), 1050, 425); //create a new scene
        stage.setTitle("Inventory Management System"); // write a title for the stage
        stage.setScene(scene); //set scene onto the stage
        stage.show(); //show the stage
    }

    /**
     * The program lifecycle is launched with initial part and product records added to the inventory tableviews
     * @param args is code that gets executed upon application start
     */
    public static void main(String[] args) { //    code that gets executed first
        //initial records for InHouse object (subclass of a Part object) to autopopulate in the mainscreen Part tableview upon launch
        InHouse p1 = new InHouse(1,"Brakes",12.99,15,5,30,111);
        Outsourced p2 = new Outsourced(2,"Tire",14.99,20,10,25,"ABC Inc");
        Inventory.addPart(p1);
        Inventory.addPart(p2);
        //initial records for Product object to autopopulate in the mainscreen Product tableview upon launch
        Product pr1 = new Product(1001,"Giant Bike",299.99,10,5,25);
        Product pr2 = new Product(1002,"Small Bike",199.99,30,2,40);
        Inventory.addProduct(pr1);
        Inventory.addProduct(pr2);

        launch(); //starts the javafx application lifecycle: init --> start --> stop
    }
}